{
  "name": "PrettyCSS",
  "version": "0.3.5",
  "preferGlobal": true,
  "author": {
    "name": "Tyler Akins",
    "email": "fidian@rumkin.com"
  },
  "description": "CSS pretty printer, lint checker, and validator",
  "homepage": "http://fidian.com/PrettyCSS",
  "contributors": [
    {
      "name": "Tyler Akins",
      "email": "fidian@rumkin.com",
      "url": "http://rumkin.com/"
    },
    {
      "name": "Michael Plaxico",
      "email": "michael.plaxico@bestbuy.com"
    }
  ],
  "bin": {
    "prettycss": "./bin/prettycss"
  },
  "scripts": {
    "test": "node_modules/vows/bin/vows"
  },
  "main": "./lib/prettycss.js",
  "repository": {
    "type": "git",
    "url": "https://github.com/fidian/PrettyCSS.git"
  },
  "keywords": [
    "css",
    "beautifier",
    "pretty-printer",
    "lint",
    "validator"
  ],
  "dependencies": {
    "OptionParser": "*"
  },
  "devDependencies": {
    "browserify": "*",
    "diff": "*",
    "vows": "*"
  },
  "license": "MIT",
  "engines": {
    "node": ">=0.6",
    "npm": ">=1"
  },
  "readme": "Description\n===========\n\nPrettyCSS is a project to make a CSS3-compliant parser, lint checker, and\npretty printer.  With this tool we will be able to check for CSS format\nviolations and then will beautify the code to standardize it.  With another\nconfiguration you are able to crunch your styles down as much as possible\nto produce minified output and we can just ignore the warnings.\n\nThis was created because there were no tools that I could download and use\non my own computer that also handled CSS3.  Also, we could really benefit\nfrom some hints and value validation that is now incorporated into PrettyCSS.\n\nThe PrettyCSS project is on [GitHub](https://github.com/fidian/prettycss/).\nFurther documentation is at http://fidian.com/prettycss and there's a little\nbit more under the docs/ folder inside the repository.\n\nInstallation\n============\n\nFirst, you can use the pretty printer *in your browser* without any\nadditional setup.  Take a look at http://www.fidian.com/prettycss and use the\nlive demo.  The HTML and JavaScript can be copied out of the repository and\nplaced wherever you need them.\n\nFor a little more power, or if you like using the command line to reformat\nyour CSS files, this is not too hard to get set up on your system.  First,\nyou will need [node.js](http://nodejs.org/) set up on your system.  Then\nyou can use `sudo npm install PrettyCSS` and it should be ready to use\non your system as the `prettycss` command.  Further, more detailed\ninstructions are at http://www.fidian.com/prettycss/installation and they\ngive you alternate ways that the program can get installed.\n\nUsage\n=====\n\nThe easiest way is to use the web interface.  You can do this by either\nopening www/test.html from the repository in your browser or by going to\nhttp://www.fidian.com/prettycss/ and looking at the live demo.  Both methods\nuse the current, bleeding-edge code that was committed to the repository.\nI suggest you go try it out and see what it can do!\n\nYou can also use the command line program.  If you installed PrettyCSS\nusing npm, then you can run the pretty printer quite easily.\n\n    prettycss my_input_file.css\n\nThere's a few options that are explained on the website at\nhttp://www.fidian.com/prettycss/command-line and those options control\nhow warnings and errors affect the pretty printing, and other ways to\nconfigure the software.\n\nLastly, this can also be linked into your existing JavaScript code, such\nas what you might be writing with [node.js](http://nodejs.org/).  You\ncould mirror the `prettycss` command-line program and make a new\n`PrettyCSS` object, then run the parser on a filename or a string containing\nCSS.  This also is easier for passing in your own options to control the\npretty printing.\n\nDependencies\n============\n\nThe JavaScript code that is used for node.js is bundled up by\n[browserify](https://github.com/substack/node-browserify).  This does add an\nextra compilation step when testing things in the browser, but it also\nprovides the benefit that we do not need to change any code to make it work\nin the browser and the scripts get transferred as a single file.\n\nThe tests are built with [vows](http://vowsjs.org/).  You can run them with\n`npm test` or `vows` in the top level directory of the repository.  There's\na lot of tests because we are asserting many little things with each of the\nvalue parsers that we use for handling CSS properties.\n\nContact\n=======\n\nFor feature requests, bug reports, or if you want to contribute to the project,\nplease check out the [GitHub Project Page](https://github.com/fidian/PrettyCSS).\n\nLicense\n=======\n\nThis code is provided under a MIT license with additional clauses restricting\npromotion with the author's names and an advertising clause.  See \ndocs/LICENSE.md for the full details.\n",
  "_id": "PrettyCSS@0.3.5",
  "_from": "PrettyCSS"
}
